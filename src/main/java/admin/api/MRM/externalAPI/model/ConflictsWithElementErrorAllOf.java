/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * ConflictsWithElementErrorAllOf
 */

public class ConflictsWithElementErrorAllOf
{
  public static final String SERIALIZED_NAME_OTHER_ID = "otherId";
  @SerializedName(SERIALIZED_NAME_OTHER_ID)
  private String otherId;


  public ConflictsWithElementErrorAllOf otherId(String otherId)
  {

    this.otherId = otherId;
    return this;
  }

  /**
   * @return otherId
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOtherId()
  {
    return otherId;
  }


  public void setOtherId(String otherId)
  {
    this.otherId = otherId;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    ConflictsWithElementErrorAllOf conflictsWithElementErrorAllOf = (ConflictsWithElementErrorAllOf) o;
    return Objects.equals(this.otherId, conflictsWithElementErrorAllOf.otherId);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(otherId);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConflictsWithElementErrorAllOf {\n");
    sb.append("    otherId: ").append(toIndentedString(otherId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

