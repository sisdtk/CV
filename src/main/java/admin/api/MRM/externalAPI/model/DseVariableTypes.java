/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 *
 */
@ApiModel(description = "")

public class DseVariableTypes
{
  public static final String SERIALIZED_NAME_SINGLE_SELECT = "singleSelect";
  @SerializedName(SERIALIZED_NAME_SINGLE_SELECT)
  private Map<String, BaseSelectVariable> singleSelect = null;

  public static final String SERIALIZED_NAME_MULTIPLE_SELECT = "multipleSelect";
  @SerializedName(SERIALIZED_NAME_MULTIPLE_SELECT)
  private Map<String, BaseSelectVariable> multipleSelect = null;

  public static final String SERIALIZED_NAME_REAL_NUMBER = "realNumber";
  @SerializedName(SERIALIZED_NAME_REAL_NUMBER)
  private Map<String, RealNumberVariable> realNumber = null;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private Map<String, UserVariable> user = null;

  public static final String SERIALIZED_NAME_GENERIC_VARIABLES = "genericVariables";
  @SerializedName(SERIALIZED_NAME_GENERIC_VARIABLES)
  private Map<String, Object> genericVariables = null;

  public static final String SERIALIZED_NAME_GRID = "grid";
  @SerializedName(SERIALIZED_NAME_GRID)
  private Map<String, DseVariableTypes> grid = null;

  public static final String SERIALIZED_NAME_JSON_OBJECTS = "jsonObjects";
  @SerializedName(SERIALIZED_NAME_JSON_OBJECTS)
  private Map<String, Object> jsonObjects = null;


  public DseVariableTypes singleSelect(Map<String, BaseSelectVariable> singleSelect)
  {

    this.singleSelect = singleSelect;
    return this;
  }

  public DseVariableTypes putSingleSelectItem(String key, BaseSelectVariable singleSelectItem)
  {
    if (this.singleSelect == null)
    {
      this.singleSelect = new HashMap<String, BaseSelectVariable>();
    }
    this.singleSelect.put(key, singleSelectItem);
    return this;
  }

  /**
   * @return singleSelect
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, BaseSelectVariable> getSingleSelect()
  {
    return singleSelect;
  }


  public void setSingleSelect(Map<String, BaseSelectVariable> singleSelect)
  {
    this.singleSelect = singleSelect;
  }


  public DseVariableTypes multipleSelect(Map<String, BaseSelectVariable> multipleSelect)
  {

    this.multipleSelect = multipleSelect;
    return this;
  }

  public DseVariableTypes putMultipleSelectItem(String key, BaseSelectVariable multipleSelectItem)
  {
    if (this.multipleSelect == null)
    {
      this.multipleSelect = new HashMap<String, BaseSelectVariable>();
    }
    this.multipleSelect.put(key, multipleSelectItem);
    return this;
  }

  /**
   * @return multipleSelect
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, BaseSelectVariable> getMultipleSelect()
  {
    return multipleSelect;
  }


  public void setMultipleSelect(Map<String, BaseSelectVariable> multipleSelect)
  {
    this.multipleSelect = multipleSelect;
  }


  public DseVariableTypes realNumber(Map<String, RealNumberVariable> realNumber)
  {

    this.realNumber = realNumber;
    return this;
  }

  public DseVariableTypes putRealNumberItem(String key, RealNumberVariable realNumberItem)
  {
    if (this.realNumber == null)
    {
      this.realNumber = new HashMap<String, RealNumberVariable>();
    }
    this.realNumber.put(key, realNumberItem);
    return this;
  }

  /**
   * @return realNumber
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, RealNumberVariable> getRealNumber()
  {
    return realNumber;
  }


  public void setRealNumber(Map<String, RealNumberVariable> realNumber)
  {
    this.realNumber = realNumber;
  }


  public DseVariableTypes user(Map<String, UserVariable> user)
  {

    this.user = user;
    return this;
  }

  public DseVariableTypes putUserItem(String key, UserVariable userItem)
  {
    if (this.user == null)
    {
      this.user = new HashMap<String, UserVariable>();
    }
    this.user.put(key, userItem);
    return this;
  }

  /**
   * @return user
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, UserVariable> getUser()
  {
    return user;
  }


  public void setUser(Map<String, UserVariable> user)
  {
    this.user = user;
  }


  public DseVariableTypes genericVariables(Map<String, Object> genericVariables)
  {

    this.genericVariables = genericVariables;
    return this;
  }

  public DseVariableTypes putGenericVariablesItem(String key, Object genericVariablesItem)
  {
    if (this.genericVariables == null)
    {
      this.genericVariables = new HashMap<String, Object>();
    }
    this.genericVariables.put(key, genericVariablesItem);
    return this;
  }

  /**
   * @return genericVariables
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getGenericVariables()
  {
    return genericVariables;
  }


  public void setGenericVariables(Map<String, Object> genericVariables)
  {
    this.genericVariables = genericVariables;
  }


  public DseVariableTypes grid(Map<String, DseVariableTypes> grid)
  {

    this.grid = grid;
    return this;
  }

  public DseVariableTypes putGridItem(String key, DseVariableTypes gridItem)
  {
    if (this.grid == null)
    {
      this.grid = new HashMap<String, DseVariableTypes>();
    }
    this.grid.put(key, gridItem);
    return this;
  }

  /**
   * @return grid
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, DseVariableTypes> getGrid()
  {
    return grid;
  }


  public void setGrid(Map<String, DseVariableTypes> grid)
  {
    this.grid = grid;
  }


  public DseVariableTypes jsonObjects(Map<String, Object> jsonObjects)
  {

    this.jsonObjects = jsonObjects;
    return this;
  }

  public DseVariableTypes putJsonObjectsItem(String key, Object jsonObjectsItem)
  {
    if (this.jsonObjects == null)
    {
      this.jsonObjects = new HashMap<String, Object>();
    }
    this.jsonObjects.put(key, jsonObjectsItem);
    return this;
  }

  /**
   * @return jsonObjects
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getJsonObjects()
  {
    return jsonObjects;
  }


  public void setJsonObjects(Map<String, Object> jsonObjects)
  {
    this.jsonObjects = jsonObjects;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    DseVariableTypes dseVariableTypes = (DseVariableTypes) o;
    return Objects.equals(this.singleSelect, dseVariableTypes.singleSelect) &&
            Objects.equals(this.multipleSelect, dseVariableTypes.multipleSelect) &&
            Objects.equals(this.realNumber, dseVariableTypes.realNumber) &&
            Objects.equals(this.user, dseVariableTypes.user) &&
            Objects.equals(this.genericVariables, dseVariableTypes.genericVariables) &&
            Objects.equals(this.grid, dseVariableTypes.grid) &&
            Objects.equals(this.jsonObjects, dseVariableTypes.jsonObjects);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(singleSelect, multipleSelect, realNumber, user, genericVariables, grid, jsonObjects);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DseVariableTypes {\n");
    sb.append("    singleSelect: ").append(toIndentedString(singleSelect)).append("\n");
    sb.append("    multipleSelect: ").append(toIndentedString(multipleSelect)).append("\n");
    sb.append("    realNumber: ").append(toIndentedString(realNumber)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    genericVariables: ").append(toIndentedString(genericVariables)).append("\n");
    sb.append("    grid: ").append(toIndentedString(grid)).append("\n");
    sb.append("    jsonObjects: ").append(toIndentedString(jsonObjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

