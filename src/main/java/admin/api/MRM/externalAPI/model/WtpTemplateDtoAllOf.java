/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * WtpTemplateDtoAllOf
 */

public class WtpTemplateDtoAllOf
{
    public static final String SERIALIZED_NAME_TYPE_SPANNING = "typeSpanning";
    @SerializedName(SERIALIZED_NAME_TYPE_SPANNING)
    private Boolean typeSpanning;

    public static final String SERIALIZED_NAME_TEMPLATE_ID = "templateId";
    @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
    private Integer templateId;

    public static final String SERIALIZED_NAME_INHERIT_FROM_PARENT = "inheritFromParent";
    @SerializedName(SERIALIZED_NAME_INHERIT_FROM_PARENT)
    private Boolean inheritFromParent;

    public static final String SERIALIZED_NAME_METADATA = "metadata";
    @SerializedName(SERIALIZED_NAME_METADATA)
    private List<WtpTemplateVariableMetadataDto> metadata = null;

    public static final String SERIALIZED_NAME_PREVIEW_ID = "previewId";
    @SerializedName(SERIALIZED_NAME_PREVIEW_ID)
    private Integer previewId;

    public static final String SERIALIZED_NAME_IS_HTML_TEMPLATE = "isHtmlTemplate";
    @SerializedName(SERIALIZED_NAME_IS_HTML_TEMPLATE)
    private Boolean isHtmlTemplate;

    public static final String SERIALIZED_NAME_PREVIEW_VERSION = "previewVersion";
    @SerializedName(SERIALIZED_NAME_PREVIEW_VERSION)
    private Integer previewVersion;


    public WtpTemplateDtoAllOf typeSpanning(Boolean typeSpanning)
    {

        this.typeSpanning = typeSpanning;
        return this;
    }

    /**
     * @return typeSpanning
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getTypeSpanning()
    {
        return typeSpanning;
    }


    public void setTypeSpanning(Boolean typeSpanning)
    {
        this.typeSpanning = typeSpanning;
    }


    public WtpTemplateDtoAllOf templateId(Integer templateId)
    {

        this.templateId = templateId;
        return this;
    }

    /**
     * @return templateId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getTemplateId()
    {
        return templateId;
    }


    public void setTemplateId(Integer templateId)
    {
        this.templateId = templateId;
    }


    public WtpTemplateDtoAllOf inheritFromParent(Boolean inheritFromParent)
    {

        this.inheritFromParent = inheritFromParent;
        return this;
    }

    /**
     * @return inheritFromParent
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getInheritFromParent()
    {
        return inheritFromParent;
    }


    public void setInheritFromParent(Boolean inheritFromParent)
    {
        this.inheritFromParent = inheritFromParent;
    }


    public WtpTemplateDtoAllOf metadata(List<WtpTemplateVariableMetadataDto> metadata)
    {

        this.metadata = metadata;
        return this;
    }

    public WtpTemplateDtoAllOf addMetadataItem(WtpTemplateVariableMetadataDto metadataItem)
    {
        if (this.metadata == null)
        {
            this.metadata = new ArrayList<WtpTemplateVariableMetadataDto>();
        }
        this.metadata.add(metadataItem);
        return this;
    }

    /**
     * @return metadata
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<WtpTemplateVariableMetadataDto> getMetadata()
    {
        return metadata;
    }


    public void setMetadata(List<WtpTemplateVariableMetadataDto> metadata)
    {
        this.metadata = metadata;
    }


    public WtpTemplateDtoAllOf previewId(Integer previewId)
    {

        this.previewId = previewId;
        return this;
    }

    /**
     * @return previewId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getPreviewId()
    {
        return previewId;
    }


    public void setPreviewId(Integer previewId)
    {
        this.previewId = previewId;
    }


    public WtpTemplateDtoAllOf isHtmlTemplate(Boolean isHtmlTemplate)
    {

        this.isHtmlTemplate = isHtmlTemplate;
        return this;
    }

    /**
     * @return isHtmlTemplate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getIsHtmlTemplate()
    {
        return isHtmlTemplate;
    }


    public void setIsHtmlTemplate(Boolean isHtmlTemplate)
    {
        this.isHtmlTemplate = isHtmlTemplate;
    }


    public WtpTemplateDtoAllOf previewVersion(Integer previewVersion)
    {

        this.previewVersion = previewVersion;
        return this;
    }

    /**
     * @return previewVersion
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getPreviewVersion()
    {
        return previewVersion;
    }


    public void setPreviewVersion(Integer previewVersion)
    {
        this.previewVersion = previewVersion;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        WtpTemplateDtoAllOf wtpTemplateDtoAllOf = (WtpTemplateDtoAllOf) o;
        return Objects.equals(this.typeSpanning, wtpTemplateDtoAllOf.typeSpanning) &&
                Objects.equals(this.templateId, wtpTemplateDtoAllOf.templateId) &&
                Objects.equals(this.inheritFromParent, wtpTemplateDtoAllOf.inheritFromParent) &&
                Objects.equals(this.metadata, wtpTemplateDtoAllOf.metadata) &&
                Objects.equals(this.previewId, wtpTemplateDtoAllOf.previewId) &&
                Objects.equals(this.isHtmlTemplate, wtpTemplateDtoAllOf.isHtmlTemplate) &&
                Objects.equals(this.previewVersion, wtpTemplateDtoAllOf.previewVersion);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(typeSpanning, templateId, inheritFromParent, metadata, previewId, isHtmlTemplate, previewVersion);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class WtpTemplateDtoAllOf {\n");
        sb.append("    typeSpanning: ").append(toIndentedString(typeSpanning)).append("\n");
        sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
        sb.append("    inheritFromParent: ").append(toIndentedString(inheritFromParent)).append("\n");
        sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
        sb.append("    previewId: ").append(toIndentedString(previewId)).append("\n");
        sb.append("    isHtmlTemplate: ").append(toIndentedString(isHtmlTemplate)).append("\n");
        sb.append("    previewVersion: ").append(toIndentedString(previewVersion)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

