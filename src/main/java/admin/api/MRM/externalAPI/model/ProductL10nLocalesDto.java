/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Product info in all possible locales
 */
@ApiModel(description = "Product info in all possible locales")

public class ProductL10nLocalesDto
{
  public static final String SERIALIZED_NAME_AVAILABLE = "available";
  @SerializedName(SERIALIZED_NAME_AVAILABLE)
  private List<ProductL10nLocaleDto> available = null;

  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private List<ProductL10nLocaleDto> deleted = null;

  public static final String SERIALIZED_NAME_EXISTED = "existed";
  @SerializedName(SERIALIZED_NAME_EXISTED)
  private List<ProductL10nLocaleDto> existed = null;

  public static final String SERIALIZED_NAME_CURRENT = "current";
  @SerializedName(SERIALIZED_NAME_CURRENT)
  private ProductL10nLocaleDto current;


  public ProductL10nLocalesDto available(List<ProductL10nLocaleDto> available)
  {

    this.available = available;
    return this;
  }

  public ProductL10nLocalesDto addAvailableItem(ProductL10nLocaleDto availableItem)
  {
    if (this.available == null)
    {
      this.available = new ArrayList<ProductL10nLocaleDto>();
    }
    this.available.add(availableItem);
    return this;
  }

  /**
   * @return available
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProductL10nLocaleDto> getAvailable()
  {
    return available;
  }


  public void setAvailable(List<ProductL10nLocaleDto> available)
  {
    this.available = available;
  }


  public ProductL10nLocalesDto deleted(List<ProductL10nLocaleDto> deleted)
  {

    this.deleted = deleted;
    return this;
  }

  public ProductL10nLocalesDto addDeletedItem(ProductL10nLocaleDto deletedItem)
  {
    if (this.deleted == null)
    {
      this.deleted = new ArrayList<ProductL10nLocaleDto>();
    }
    this.deleted.add(deletedItem);
    return this;
  }

  /**
   * @return deleted
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProductL10nLocaleDto> getDeleted()
  {
    return deleted;
  }


  public void setDeleted(List<ProductL10nLocaleDto> deleted)
  {
    this.deleted = deleted;
  }


  public ProductL10nLocalesDto existed(List<ProductL10nLocaleDto> existed)
  {

    this.existed = existed;
    return this;
  }

  public ProductL10nLocalesDto addExistedItem(ProductL10nLocaleDto existedItem)
  {
    if (this.existed == null)
    {
      this.existed = new ArrayList<ProductL10nLocaleDto>();
    }
    this.existed.add(existedItem);
    return this;
  }

  /**
   * @return existed
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProductL10nLocaleDto> getExisted()
  {
    return existed;
  }


  public void setExisted(List<ProductL10nLocaleDto> existed)
  {
    this.existed = existed;
  }


  public ProductL10nLocalesDto current(ProductL10nLocaleDto current)
  {

    this.current = current;
    return this;
  }

  /**
   * Get current
   *
   * @return current
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProductL10nLocaleDto getCurrent()
  {
    return current;
  }


  public void setCurrent(ProductL10nLocaleDto current)
  {
    this.current = current;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    ProductL10nLocalesDto productL10nLocalesDto = (ProductL10nLocalesDto) o;
    return Objects.equals(this.available, productL10nLocalesDto.available) &&
            Objects.equals(this.deleted, productL10nLocalesDto.deleted) &&
            Objects.equals(this.existed, productL10nLocalesDto.existed) &&
            Objects.equals(this.current, productL10nLocalesDto.current);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(available, deleted, existed, current);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductL10nLocalesDto {\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    existed: ").append(toIndentedString(existed)).append("\n");
    sb.append("    current: ").append(toIndentedString(current)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

