/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * BpmnWorkflowTypeAllOf
 */

public class BpmnWorkflowTypeAllOf
{
  public static final String SERIALIZED_NAME_PROCESS_DEFINITION_ID = "processDefinitionId";
  @SerializedName(SERIALIZED_NAME_PROCESS_DEFINITION_ID)
  private String processDefinitionId;

  public static final String SERIALIZED_NAME_PROCESS_DEFINITION_KEY = "processDefinitionKey";
  @SerializedName(SERIALIZED_NAME_PROCESS_DEFINITION_KEY)
  private String processDefinitionKey;

  public static final String SERIALIZED_NAME_PROCESS_DEFINITION_VERSION_TAG = "processDefinitionVersionTag";
  @SerializedName(SERIALIZED_NAME_PROCESS_DEFINITION_VERSION_TAG)
  private String processDefinitionVersionTag;

  public static final String SERIALIZED_NAME_MODEL_DECORATION = "modelDecoration";
  @SerializedName(SERIALIZED_NAME_MODEL_DECORATION)
  private Object modelDecoration;


  public BpmnWorkflowTypeAllOf processDefinitionId(String processDefinitionId)
  {

    this.processDefinitionId = processDefinitionId;
    return this;
  }

  /**
   * @return processDefinitionId
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProcessDefinitionId()
  {
    return processDefinitionId;
  }


  public void setProcessDefinitionId(String processDefinitionId)
  {
    this.processDefinitionId = processDefinitionId;
  }


  public BpmnWorkflowTypeAllOf processDefinitionKey(String processDefinitionKey)
  {

    this.processDefinitionKey = processDefinitionKey;
    return this;
  }

  /**
   * @return processDefinitionKey
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProcessDefinitionKey()
  {
    return processDefinitionKey;
  }


  public void setProcessDefinitionKey(String processDefinitionKey)
  {
    this.processDefinitionKey = processDefinitionKey;
  }


  public BpmnWorkflowTypeAllOf processDefinitionVersionTag(String processDefinitionVersionTag)
  {

    this.processDefinitionVersionTag = processDefinitionVersionTag;
    return this;
  }

  /**
   * @return processDefinitionVersionTag
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProcessDefinitionVersionTag()
  {
    return processDefinitionVersionTag;
  }


  public void setProcessDefinitionVersionTag(String processDefinitionVersionTag)
  {
    this.processDefinitionVersionTag = processDefinitionVersionTag;
  }


  public BpmnWorkflowTypeAllOf modelDecoration(Object modelDecoration)
  {

    this.modelDecoration = modelDecoration;
    return this;
  }

  /**
   * @return modelDecoration
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getModelDecoration()
  {
    return modelDecoration;
  }


  public void setModelDecoration(Object modelDecoration)
  {
    this.modelDecoration = modelDecoration;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    BpmnWorkflowTypeAllOf bpmnWorkflowTypeAllOf = (BpmnWorkflowTypeAllOf) o;
    return Objects.equals(this.processDefinitionId, bpmnWorkflowTypeAllOf.processDefinitionId) &&
            Objects.equals(this.processDefinitionKey, bpmnWorkflowTypeAllOf.processDefinitionKey) &&
            Objects.equals(this.processDefinitionVersionTag, bpmnWorkflowTypeAllOf.processDefinitionVersionTag) &&
            Objects.equals(this.modelDecoration, bpmnWorkflowTypeAllOf.modelDecoration);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(processDefinitionId, processDefinitionKey, processDefinitionVersionTag, modelDecoration);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BpmnWorkflowTypeAllOf {\n");
    sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
    sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
    sb.append("    processDefinitionVersionTag: ").append(toIndentedString(processDefinitionVersionTag)).append("\n");
    sb.append("    modelDecoration: ").append(toIndentedString(modelDecoration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

