/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.*;

/**
 *
 */
@ApiModel(description = "")

public class ParameterDto
{
  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_ENUMS = "enums";
  @SerializedName(SERIALIZED_NAME_ENUMS)
  private List<String> enums = null;

  public static final String SERIALIZED_NAME_DEFAULT_VALUE = "defaultValue";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE)
  private Object defaultValue;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private Map<String, Object> items = null;

  public static final String SERIALIZED_NAME_IN = "in";
  @SerializedName(SERIALIZED_NAME_IN)
  private String in;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private List<Map<String, Object>> properties = null;


  public ParameterDto format(String format)
  {

    this.format = format;
    return this;
  }

  /**
   * @return format
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFormat()
  {
    return format;
  }


  public void setFormat(String format)
  {
    this.format = format;
  }


  public ParameterDto enums(List<String> enums)
  {

    this.enums = enums;
    return this;
  }

  public ParameterDto addEnumsItem(String enumsItem)
  {
    if (this.enums == null)
    {
      this.enums = new ArrayList<String>();
    }
    this.enums.add(enumsItem);
    return this;
  }

  /**
   * @return enums
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getEnums()
  {
    return enums;
  }


  public void setEnums(List<String> enums)
  {
    this.enums = enums;
  }


  public ParameterDto defaultValue(Object defaultValue)
  {

    this.defaultValue = defaultValue;
    return this;
  }

  /**
   * @return defaultValue
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDefaultValue()
  {
    return defaultValue;
  }


  public void setDefaultValue(Object defaultValue)
  {
    this.defaultValue = defaultValue;
  }


  public ParameterDto items(Map<String, Object> items)
  {

    this.items = items;
    return this;
  }

  public ParameterDto putItemsItem(String key, Object itemsItem)
  {
    if (this.items == null)
    {
      this.items = new HashMap<String, Object>();
    }
    this.items.put(key, itemsItem);
    return this;
  }

  /**
   * @return items
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getItems()
  {
    return items;
  }


  public void setItems(Map<String, Object> items)
  {
    this.items = items;
  }


  public ParameterDto in(String in)
  {

    this.in = in;
    return this;
  }

  /**
   * @return in
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIn()
  {
    return in;
  }


  public void setIn(String in)
  {
    this.in = in;
  }


  public ParameterDto type(String type)
  {

    this.type = type;
    return this;
  }

  /**
   * @return type
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType()
  {
    return type;
  }


  public void setType(String type)
  {
    this.type = type;
  }


  public ParameterDto name(String name)
  {

    this.name = name;
    return this;
  }

  /**
   * @return name
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName()
  {
    return name;
  }


  public void setName(String name)
  {
    this.name = name;
  }


  public ParameterDto description(String description)
  {

    this.description = description;
    return this;
  }

  /**
   * @return description
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription()
  {
    return description;
  }


  public void setDescription(String description)
  {
    this.description = description;
  }


  public ParameterDto required(Boolean required)
  {

    this.required = required;
    return this;
  }

  /**
   * @return required
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequired()
  {
    return required;
  }


  public void setRequired(Boolean required)
  {
    this.required = required;
  }


  public ParameterDto properties(List<Map<String, Object>> properties)
  {

    this.properties = properties;
    return this;
  }

  public ParameterDto addPropertiesItem(Map<String, Object> propertiesItem)
  {
    if (this.properties == null)
    {
      this.properties = new ArrayList<Map<String, Object>>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

  /**
   * @return properties
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Map<String, Object>> getProperties()
  {
    return properties;
  }


  public void setProperties(List<Map<String, Object>> properties)
  {
    this.properties = properties;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    ParameterDto parameterDto = (ParameterDto) o;
    return Objects.equals(this.format, parameterDto.format) &&
            Objects.equals(this.enums, parameterDto.enums) &&
            Objects.equals(this.defaultValue, parameterDto.defaultValue) &&
            Objects.equals(this.items, parameterDto.items) &&
            Objects.equals(this.in, parameterDto.in) &&
            Objects.equals(this.type, parameterDto.type) &&
            Objects.equals(this.name, parameterDto.name) &&
            Objects.equals(this.description, parameterDto.description) &&
            Objects.equals(this.required, parameterDto.required) &&
            Objects.equals(this.properties, parameterDto.properties);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(format, enums, defaultValue, items, in, type, name, description, required, properties);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterDto {\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    enums: ").append(toIndentedString(enums)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    in: ").append(toIndentedString(in)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

