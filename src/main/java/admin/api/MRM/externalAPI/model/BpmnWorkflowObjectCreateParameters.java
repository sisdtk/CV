/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 *
 */
@ApiModel(description = "")

public class BpmnWorkflowObjectCreateParameters
{
  public static final String SERIALIZED_NAME_WORKFLOW_OBJECT_TYPE_I_D = "workflowObjectTypeID";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_OBJECT_TYPE_I_D)
  private Integer workflowObjectTypeID;

  public static final String SERIALIZED_NAME_WORKFLOW_TYPE_I_D = "workflowTypeID";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_TYPE_I_D)
  private Integer workflowTypeID;

  public static final String SERIALIZED_NAME_WORKFLOW_STATUS = "workflowStatus";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_STATUS)
  private Status workflowStatus;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_VARIABLES = "variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  private Map<String, Object> variables = null;


  public BpmnWorkflowObjectCreateParameters workflowObjectTypeID(Integer workflowObjectTypeID)
  {

    this.workflowObjectTypeID = workflowObjectTypeID;
    return this;
  }

  /**
   * @return workflowObjectTypeID
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWorkflowObjectTypeID()
  {
    return workflowObjectTypeID;
  }


  public void setWorkflowObjectTypeID(Integer workflowObjectTypeID)
  {
    this.workflowObjectTypeID = workflowObjectTypeID;
  }


  public BpmnWorkflowObjectCreateParameters workflowTypeID(Integer workflowTypeID)
  {

    this.workflowTypeID = workflowTypeID;
    return this;
  }

  /**
   * @return workflowTypeID
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWorkflowTypeID()
  {
    return workflowTypeID;
  }


  public void setWorkflowTypeID(Integer workflowTypeID)
  {
    this.workflowTypeID = workflowTypeID;
  }


  public BpmnWorkflowObjectCreateParameters workflowStatus(Status workflowStatus)
  {

    this.workflowStatus = workflowStatus;
    return this;
  }

  /**
   * Get workflowStatus
   *
   * @return workflowStatus
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Status getWorkflowStatus()
  {
    return workflowStatus;
  }


  public void setWorkflowStatus(Status workflowStatus)
  {
    this.workflowStatus = workflowStatus;
  }


  public BpmnWorkflowObjectCreateParameters type(String type)
  {

    this.type = type;
    return this;
  }

  /**
   * @return type
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType()
  {
    return type;
  }


  public void setType(String type)
  {
    this.type = type;
  }


  public BpmnWorkflowObjectCreateParameters userId(Integer userId)
  {

    this.userId = userId;
    return this;
  }

  /**
   * @return userId
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId()
  {
    return userId;
  }


  public void setUserId(Integer userId)
  {
    this.userId = userId;
  }


  public BpmnWorkflowObjectCreateParameters variables(Map<String, Object> variables)
  {

    this.variables = variables;
    return this;
  }

  public BpmnWorkflowObjectCreateParameters putVariablesItem(String key, Object variablesItem)
  {
    if (this.variables == null)
    {
      this.variables = new HashMap<String, Object>();
    }
    this.variables.put(key, variablesItem);
    return this;
  }

  /**
   * @return variables
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getVariables()
  {
    return variables;
  }


  public void setVariables(Map<String, Object> variables)
  {
    this.variables = variables;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    BpmnWorkflowObjectCreateParameters bpmnWorkflowObjectCreateParameters = (BpmnWorkflowObjectCreateParameters) o;
    return Objects.equals(this.workflowObjectTypeID, bpmnWorkflowObjectCreateParameters.workflowObjectTypeID) &&
            Objects.equals(this.workflowTypeID, bpmnWorkflowObjectCreateParameters.workflowTypeID) &&
            Objects.equals(this.workflowStatus, bpmnWorkflowObjectCreateParameters.workflowStatus) &&
            Objects.equals(this.type, bpmnWorkflowObjectCreateParameters.type) &&
            Objects.equals(this.userId, bpmnWorkflowObjectCreateParameters.userId) &&
            Objects.equals(this.variables, bpmnWorkflowObjectCreateParameters.variables);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(workflowObjectTypeID, workflowTypeID, workflowStatus, type, userId, variables);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BpmnWorkflowObjectCreateParameters {\n");
    sb.append("    workflowObjectTypeID: ").append(toIndentedString(workflowObjectTypeID)).append("\n");
    sb.append("    workflowTypeID: ").append(toIndentedString(workflowTypeID)).append("\n");
    sb.append("    workflowStatus: ").append(toIndentedString(workflowStatus)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

