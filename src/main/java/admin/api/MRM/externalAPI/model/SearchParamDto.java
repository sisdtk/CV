/*
 * DSE REST API
 * <h2>DSE REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Generic search configuration
 */
@ApiModel(description = "Generic search configuration")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-24T15:30:46.502012+07:00[Asia/Novosibirsk]")
public class SearchParamDto
{
    public static final String SERIALIZED_NAME_FILTER_ID = "filterId";
    @SerializedName(SERIALIZED_NAME_FILTER_ID)
    private Integer filterId;

    public static final String SERIALIZED_NAME_FROM = "from";
    @SerializedName(SERIALIZED_NAME_FROM)
    private Integer from;

    public static final String SERIALIZED_NAME_LIMIT = "limit";
    @SerializedName(SERIALIZED_NAME_LIMIT)
    private Integer limit;

    public static final String SERIALIZED_NAME_SORT = "sort";
    @SerializedName(SERIALIZED_NAME_SORT)
    private Integer sort;

    public static final String SERIALIZED_NAME_DIR = "dir";
    @SerializedName(SERIALIZED_NAME_DIR)
    private String dir;

    public static final String SERIALIZED_NAME_VARIABLE_CONDITION = "variableCondition";
    @SerializedName(SERIALIZED_NAME_VARIABLE_CONDITION)
    private List<VariableConditionDto> variableCondition = null;

    public static final String SERIALIZED_NAME_FULLTEXT = "fulltext";
    @SerializedName(SERIALIZED_NAME_FULLTEXT)
    private String fulltext;

    public static final String SERIALIZED_NAME_STATES = "states";


    public SearchParamDto filterId(Integer filterId)
    {

        this.filterId = filterId;
        return this;
    }

    /**
     * The filter Id can be whether System or Custom filter. If there are some conditions provided it will make a temporary filter for the search
     *
     * @return filterId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The filter Id can be whether System or Custom filter. If there are some conditions provided it will make a temporary filter for the search")

    public Integer getFilterId()
    {
        return filterId;
    }


    public void setFilterId(Integer filterId)
    {
        this.filterId = filterId;
    }


    public SearchParamDto from(Integer from)
    {

        this.from = from;
        return this;
    }

    /**
     * If parameter is not set, then it would be set to 0. It means that list will be read from the first element.
     *
     * @return from
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "If parameter is not set, then it would be set to 0. It means that list will be read from the first element.")

    public Integer getFrom()
    {
        return from;
    }


    public void setFrom(Integer from)
    {
        this.from = from;
    }


    public SearchParamDto limit(Integer limit)
    {

        this.limit = limit;
        return this;
    }

    /**
     * If parameter is not set, then it would be set to Default limit (20). It means that only first 20 will be shown.
     *
     * @return limit
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "If parameter is not set, then it would be set to Default limit (20). It means that only first 20 will be shown.")

    public Integer getLimit()
    {
        return limit;
    }


    public void setLimit(Integer limit)
    {
        this.limit = limit;
    }


    public SearchParamDto sort(Integer sort)
    {

        this.sort = sort;
        return this;
    }

    /**
     * The Id of the variable that user would like list to be sorted. If parameter is left empty it automatically will be set to Last Modification Date (126)
     *
     * @return sort
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The Id of the variable that user would like list to be sorted. If parameter is left empty it automatically will be set to Last Modification Date (126)")

    public Integer getSort()
    {
        return sort;
    }


    public void setSort(Integer sort)
    {
        this.sort = sort;
    }


    public SearchParamDto dir(String dir)
    {

        this.dir = dir;
        return this;
    }

    /**
     * Parameter supports value as a string ASC/DESC. If parameter is omitted it then will be set up to DESC (descendent)
     *
     * @return dir
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Parameter supports value as a string ASC/DESC. If parameter is omitted it then will be set up to DESC (descendent)")

    public String getDir()
    {
        return dir;
    }


    public void setDir(String dir)
    {
        this.dir = dir;
    }


    public SearchParamDto variableCondition(List<VariableConditionDto> variableCondition)
    {

        this.variableCondition = variableCondition;
        return this;
    }

    public SearchParamDto addVariableConditionItem(VariableConditionDto variableConditionItem)
    {
        if (this.variableCondition == null)
        {
            this.variableCondition = new ArrayList<VariableConditionDto>();
        }
        this.variableCondition.add(variableConditionItem);
        return this;
    }

    /**
     * There is a list of Variable Conditions should be provided. For further information please have a look at the VariableConditionDto
     *
     * @return variableCondition
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "There is a list of Variable Conditions should be provided. For further information please have a look at the VariableConditionDto")

    public List<VariableConditionDto> getVariableCondition()
    {
        return variableCondition;
    }


    public void setVariableCondition(List<VariableConditionDto> variableCondition)
    {
        this.variableCondition = variableCondition;
    }


    public SearchParamDto fulltext(String fulltext)
    {

        this.fulltext = fulltext;
        return this;
    }

    /**
     * The fulltext searches through Job Name, Job Id and variable&#39;s values like SingleInputLine, MultiValueInputLine, MultilineInputArea, DseObjectId or AdvancedGrid row values
     *
     * @return fulltext
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The fulltext searches through Job Name, Job Id and variable's values like SingleInputLine, MultiValueInputLine, MultilineInputArea, DseObjectId or AdvancedGrid row values")

    public String getFulltext()
    {
        return fulltext;
    }


    public void setFulltext(String fulltext)
    {
        this.fulltext = fulltext;
    }



    @Override
    public boolean equals(java.lang.Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SearchParamDto searchParamDto = (SearchParamDto) o;
        return Objects.equals(this.filterId, searchParamDto.filterId) &&
                Objects.equals(this.from, searchParamDto.from) &&
                Objects.equals(this.limit, searchParamDto.limit) &&
                Objects.equals(this.sort, searchParamDto.sort) &&
                Objects.equals(this.dir, searchParamDto.dir) &&
                Objects.equals(this.variableCondition, searchParamDto.variableCondition) &&
                Objects.equals(this.fulltext, searchParamDto.fulltext);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(filterId, from, limit, sort, dir, variableCondition, fulltext);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SearchParamDto {\n");
        sb.append("    filterId: ").append(toIndentedString(filterId)).append("\n");
        sb.append("    from: ").append(toIndentedString(from)).append("\n");
        sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
        sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
        sb.append("    dir: ").append(toIndentedString(dir)).append("\n");
        sb.append("    variableCondition: ").append(toIndentedString(variableCondition)).append("\n");
        sb.append("    fulltext: ").append(toIndentedString(fulltext)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

