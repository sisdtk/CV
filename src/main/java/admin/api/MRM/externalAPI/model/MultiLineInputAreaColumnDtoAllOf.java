/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * MultiLineInputAreaColumnDtoAllOf
 */

public class MultiLineInputAreaColumnDtoAllOf
{
    public static final String SERIALIZED_NAME_WIDTH = "width";
    @SerializedName(SERIALIZED_NAME_WIDTH)
    private Integer width;

    public static final String SERIALIZED_NAME_POSITION = "position";
    @SerializedName(SERIALIZED_NAME_POSITION)
    private Integer position;

    public static final String SERIALIZED_NAME_MAX_CHARACTERS = "maxCharacters";
    @SerializedName(SERIALIZED_NAME_MAX_CHARACTERS)
    private Integer maxCharacters;

    public static final String SERIALIZED_NAME_MAX_LINES = "maxLines";
    @SerializedName(SERIALIZED_NAME_MAX_LINES)
    private Integer maxLines;

    public static final String SERIALIZED_NAME_COMPLETE_WIDTH = "completeWidth";
    @SerializedName(SERIALIZED_NAME_COMPLETE_WIDTH)
    private Boolean completeWidth;

    public static final String SERIALIZED_NAME_ALLOW_FORMATTING = "allowFormatting";
    @SerializedName(SERIALIZED_NAME_ALLOW_FORMATTING)
    private Boolean allowFormatting;

    public static final String SERIALIZED_NAME_COLUMNS = "columns";
    @SerializedName(SERIALIZED_NAME_COLUMNS)
    private Integer columns;

    public static final String SERIALIZED_NAME_EDITOR_CONFIGURATION = "editorConfiguration";
    @SerializedName(SERIALIZED_NAME_EDITOR_CONFIGURATION)
    private Integer editorConfiguration;

    public static final String SERIALIZED_NAME_DEFAULT_VALUE = "defaultValue";
    @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE)
    private String defaultValue;

    public static final String SERIALIZED_NAME_FORMER_TECHNICAL_VALUE = "formerTechnicalValue";
    @SerializedName(SERIALIZED_NAME_FORMER_TECHNICAL_VALUE)
    private String formerTechnicalValue;

    public static final String SERIALIZED_NAME_DYNAMIC_TABLE_INDEX = "dynamicTableIndex";
    @SerializedName(SERIALIZED_NAME_DYNAMIC_TABLE_INDEX)
    private String dynamicTableIndex;

    public static final String SERIALIZED_NAME_PREFILLING = "prefilling";
    @SerializedName(SERIALIZED_NAME_PREFILLING)
    private PrefillingDto prefilling;


    public MultiLineInputAreaColumnDtoAllOf width(Integer width)
    {

        this.width = width;
        return this;
    }

    /**
     * @return width
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getWidth()
    {
        return width;
    }


    public void setWidth(Integer width)
    {
        this.width = width;
    }


    public MultiLineInputAreaColumnDtoAllOf position(Integer position)
    {

        this.position = position;
        return this;
    }

    /**
     * @return position
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getPosition()
    {
        return position;
    }


    public void setPosition(Integer position)
    {
        this.position = position;
    }


    public MultiLineInputAreaColumnDtoAllOf maxCharacters(Integer maxCharacters)
    {

        this.maxCharacters = maxCharacters;
        return this;
    }

    /**
     * @return maxCharacters
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getMaxCharacters()
    {
        return maxCharacters;
    }


    public void setMaxCharacters(Integer maxCharacters)
    {
        this.maxCharacters = maxCharacters;
    }


    public MultiLineInputAreaColumnDtoAllOf maxLines(Integer maxLines)
    {

        this.maxLines = maxLines;
        return this;
    }

    /**
     * @return maxLines
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getMaxLines()
    {
        return maxLines;
    }


    public void setMaxLines(Integer maxLines)
    {
        this.maxLines = maxLines;
    }


    public MultiLineInputAreaColumnDtoAllOf completeWidth(Boolean completeWidth)
    {

        this.completeWidth = completeWidth;
        return this;
    }

    /**
     * @return completeWidth
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getCompleteWidth()
    {
        return completeWidth;
    }


    public void setCompleteWidth(Boolean completeWidth)
    {
        this.completeWidth = completeWidth;
    }


    public MultiLineInputAreaColumnDtoAllOf allowFormatting(Boolean allowFormatting)
    {

        this.allowFormatting = allowFormatting;
        return this;
    }

    /**
     * @return allowFormatting
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getAllowFormatting()
    {
        return allowFormatting;
    }


    public void setAllowFormatting(Boolean allowFormatting)
    {
        this.allowFormatting = allowFormatting;
    }


    public MultiLineInputAreaColumnDtoAllOf columns(Integer columns)
    {

        this.columns = columns;
        return this;
    }

    /**
     * @return columns
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getColumns()
    {
        return columns;
    }


    public void setColumns(Integer columns)
    {
        this.columns = columns;
    }


    public MultiLineInputAreaColumnDtoAllOf editorConfiguration(Integer editorConfiguration)
    {

        this.editorConfiguration = editorConfiguration;
        return this;
    }

    /**
     * @return editorConfiguration
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getEditorConfiguration()
    {
        return editorConfiguration;
    }


    public void setEditorConfiguration(Integer editorConfiguration)
    {
        this.editorConfiguration = editorConfiguration;
    }


    public MultiLineInputAreaColumnDtoAllOf defaultValue(String defaultValue)
    {

        this.defaultValue = defaultValue;
        return this;
    }

    /**
     * @return defaultValue
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getDefaultValue()
    {
        return defaultValue;
    }


    public void setDefaultValue(String defaultValue)
    {
        this.defaultValue = defaultValue;
    }


    public MultiLineInputAreaColumnDtoAllOf formerTechnicalValue(String formerTechnicalValue)
    {

        this.formerTechnicalValue = formerTechnicalValue;
        return this;
    }

    /**
     * @return formerTechnicalValue
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getFormerTechnicalValue()
    {
        return formerTechnicalValue;
    }


    public void setFormerTechnicalValue(String formerTechnicalValue)
    {
        this.formerTechnicalValue = formerTechnicalValue;
    }


    public MultiLineInputAreaColumnDtoAllOf dynamicTableIndex(String dynamicTableIndex)
    {

        this.dynamicTableIndex = dynamicTableIndex;
        return this;
    }

    /**
     * @return dynamicTableIndex
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getDynamicTableIndex()
    {
        return dynamicTableIndex;
    }


    public void setDynamicTableIndex(String dynamicTableIndex)
    {
        this.dynamicTableIndex = dynamicTableIndex;
    }


    public MultiLineInputAreaColumnDtoAllOf prefilling(PrefillingDto prefilling)
    {

        this.prefilling = prefilling;
        return this;
    }

    /**
     * Get prefilling
     *
     * @return prefilling
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public PrefillingDto getPrefilling()
    {
        return prefilling;
    }


    public void setPrefilling(PrefillingDto prefilling)
    {
        this.prefilling = prefilling;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        MultiLineInputAreaColumnDtoAllOf multiLineInputAreaColumnDtoAllOf = (MultiLineInputAreaColumnDtoAllOf) o;
        return Objects.equals(this.width, multiLineInputAreaColumnDtoAllOf.width) &&
                Objects.equals(this.position, multiLineInputAreaColumnDtoAllOf.position) &&
                Objects.equals(this.maxCharacters, multiLineInputAreaColumnDtoAllOf.maxCharacters) &&
                Objects.equals(this.maxLines, multiLineInputAreaColumnDtoAllOf.maxLines) &&
                Objects.equals(this.completeWidth, multiLineInputAreaColumnDtoAllOf.completeWidth) &&
                Objects.equals(this.allowFormatting, multiLineInputAreaColumnDtoAllOf.allowFormatting) &&
                Objects.equals(this.columns, multiLineInputAreaColumnDtoAllOf.columns) &&
                Objects.equals(this.editorConfiguration, multiLineInputAreaColumnDtoAllOf.editorConfiguration) &&
                Objects.equals(this.defaultValue, multiLineInputAreaColumnDtoAllOf.defaultValue) &&
                Objects.equals(this.formerTechnicalValue, multiLineInputAreaColumnDtoAllOf.formerTechnicalValue) &&
                Objects.equals(this.dynamicTableIndex, multiLineInputAreaColumnDtoAllOf.dynamicTableIndex) &&
                Objects.equals(this.prefilling, multiLineInputAreaColumnDtoAllOf.prefilling);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(width, position, maxCharacters, maxLines, completeWidth, allowFormatting, columns, editorConfiguration, defaultValue, formerTechnicalValue, dynamicTableIndex, prefilling);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class MultiLineInputAreaColumnDtoAllOf {\n");
        sb.append("    width: ").append(toIndentedString(width)).append("\n");
        sb.append("    position: ").append(toIndentedString(position)).append("\n");
        sb.append("    maxCharacters: ").append(toIndentedString(maxCharacters)).append("\n");
        sb.append("    maxLines: ").append(toIndentedString(maxLines)).append("\n");
        sb.append("    completeWidth: ").append(toIndentedString(completeWidth)).append("\n");
        sb.append("    allowFormatting: ").append(toIndentedString(allowFormatting)).append("\n");
        sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
        sb.append("    editorConfiguration: ").append(toIndentedString(editorConfiguration)).append("\n");
        sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
        sb.append("    formerTechnicalValue: ").append(toIndentedString(formerTechnicalValue)).append("\n");
        sb.append("    dynamicTableIndex: ").append(toIndentedString(dynamicTableIndex)).append("\n");
        sb.append("    prefilling: ").append(toIndentedString(prefilling)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

