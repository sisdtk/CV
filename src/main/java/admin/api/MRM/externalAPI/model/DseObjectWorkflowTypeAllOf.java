/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.*;

/**
 * DseObjectWorkflowTypeAllOf
 */

public class DseObjectWorkflowTypeAllOf
{
  public static final String SERIALIZED_NAME_VARIABLE_TYPES = "variableTypes";
  @SerializedName(SERIALIZED_NAME_VARIABLE_TYPES)
  private DseVariableTypes variableTypes;

  public static final String SERIALIZED_NAME_CUSTOM_STRUCTURES = "customStructures";
  @SerializedName(SERIALIZED_NAME_CUSTOM_STRUCTURES)
  private Map<String, CustomStructure> customStructures = null;

  public static final String SERIALIZED_NAME_USER_GROUPS = "userGroups";
  @SerializedName(SERIALIZED_NAME_USER_GROUPS)
  private List<String> userGroups = null;

  public static final String SERIALIZED_NAME_VALIDATION_RESULTS = "validationResults";
  @SerializedName(SERIALIZED_NAME_VALIDATION_RESULTS)
  private BaseValidationResults validationResults;

  public static final String SERIALIZED_NAME_NOTIFICATION_TEMPLATES = "notificationTemplates";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_TEMPLATES)
  private Map<String, String> notificationTemplates = null;


  public DseObjectWorkflowTypeAllOf variableTypes(DseVariableTypes variableTypes)
  {

    this.variableTypes = variableTypes;
    return this;
  }

  /**
   * Get variableTypes
   *
   * @return variableTypes
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DseVariableTypes getVariableTypes()
  {
    return variableTypes;
  }


  public void setVariableTypes(DseVariableTypes variableTypes)
  {
    this.variableTypes = variableTypes;
  }


  public DseObjectWorkflowTypeAllOf customStructures(Map<String, CustomStructure> customStructures)
  {

    this.customStructures = customStructures;
    return this;
  }

  public DseObjectWorkflowTypeAllOf putCustomStructuresItem(String key, CustomStructure customStructuresItem)
  {
    if (this.customStructures == null)
    {
      this.customStructures = new HashMap<String, CustomStructure>();
    }
    this.customStructures.put(key, customStructuresItem);
    return this;
  }

  /**
   * @return customStructures
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, CustomStructure> getCustomStructures()
  {
    return customStructures;
  }


  public void setCustomStructures(Map<String, CustomStructure> customStructures)
  {
    this.customStructures = customStructures;
  }


  public DseObjectWorkflowTypeAllOf userGroups(List<String> userGroups)
  {

    this.userGroups = userGroups;
    return this;
  }

  public DseObjectWorkflowTypeAllOf addUserGroupsItem(String userGroupsItem)
  {
    if (this.userGroups == null)
    {
      this.userGroups = new ArrayList<String>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

  /**
   * @return userGroups
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUserGroups()
  {
    return userGroups;
  }


  public void setUserGroups(List<String> userGroups)
  {
    this.userGroups = userGroups;
  }


  public DseObjectWorkflowTypeAllOf validationResults(BaseValidationResults validationResults)
  {

    this.validationResults = validationResults;
    return this;
  }

  /**
   * Get validationResults
   *
   * @return validationResults
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BaseValidationResults getValidationResults()
  {
    return validationResults;
  }


  public void setValidationResults(BaseValidationResults validationResults)
  {
    this.validationResults = validationResults;
  }


  public DseObjectWorkflowTypeAllOf notificationTemplates(Map<String, String> notificationTemplates)
  {

    this.notificationTemplates = notificationTemplates;
    return this;
  }

  public DseObjectWorkflowTypeAllOf putNotificationTemplatesItem(String key, String notificationTemplatesItem)
  {
    if (this.notificationTemplates == null)
    {
      this.notificationTemplates = new HashMap<String, String>();
    }
    this.notificationTemplates.put(key, notificationTemplatesItem);
    return this;
  }

  /**
   * @return notificationTemplates
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getNotificationTemplates()
  {
    return notificationTemplates;
  }


  public void setNotificationTemplates(Map<String, String> notificationTemplates)
  {
    this.notificationTemplates = notificationTemplates;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    DseObjectWorkflowTypeAllOf dseObjectWorkflowTypeAllOf = (DseObjectWorkflowTypeAllOf) o;
    return Objects.equals(this.variableTypes, dseObjectWorkflowTypeAllOf.variableTypes) &&
            Objects.equals(this.customStructures, dseObjectWorkflowTypeAllOf.customStructures) &&
            Objects.equals(this.userGroups, dseObjectWorkflowTypeAllOf.userGroups) &&
            Objects.equals(this.validationResults, dseObjectWorkflowTypeAllOf.validationResults) &&
            Objects.equals(this.notificationTemplates, dseObjectWorkflowTypeAllOf.notificationTemplates);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(variableTypes, customStructures, userGroups, validationResults, notificationTemplates);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DseObjectWorkflowTypeAllOf {\n");
    sb.append("    variableTypes: ").append(toIndentedString(variableTypes)).append("\n");
    sb.append("    customStructures: ").append(toIndentedString(customStructures)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("    validationResults: ").append(toIndentedString(validationResults)).append("\n");
    sb.append("    notificationTemplates: ").append(toIndentedString(notificationTemplates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

