/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 *
 */
@ApiModel(description = "")

public class StackTraceElement
{
  public static final String SERIALIZED_NAME_CLASS_NAME = "className";
  @SerializedName(SERIALIZED_NAME_CLASS_NAME)
  private String className;

  public static final String SERIALIZED_NAME_METHOD_NAME = "methodName";
  @SerializedName(SERIALIZED_NAME_METHOD_NAME)
  private String methodName;

  public static final String SERIALIZED_NAME_FILE_NAME = "fileName";
  @SerializedName(SERIALIZED_NAME_FILE_NAME)
  private String fileName;

  public static final String SERIALIZED_NAME_NATIVE_METHOD = "nativeMethod";
  @SerializedName(SERIALIZED_NAME_NATIVE_METHOD)
  private Boolean nativeMethod;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "lineNumber";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private Integer lineNumber;


  public StackTraceElement className(String className)
  {

    this.className = className;
    return this;
  }

  /**
   * @return className
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClassName()
  {
    return className;
  }


  public void setClassName(String className)
  {
    this.className = className;
  }


  public StackTraceElement methodName(String methodName)
  {

    this.methodName = methodName;
    return this;
  }

  /**
   * @return methodName
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMethodName()
  {
    return methodName;
  }


  public void setMethodName(String methodName)
  {
    this.methodName = methodName;
  }


  public StackTraceElement fileName(String fileName)
  {

    this.fileName = fileName;
    return this;
  }

  /**
   * @return fileName
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFileName()
  {
    return fileName;
  }


  public void setFileName(String fileName)
  {
    this.fileName = fileName;
  }


  public StackTraceElement nativeMethod(Boolean nativeMethod)
  {

    this.nativeMethod = nativeMethod;
    return this;
  }

  /**
   * @return nativeMethod
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getNativeMethod()
  {
    return nativeMethod;
  }


  public void setNativeMethod(Boolean nativeMethod)
  {
    this.nativeMethod = nativeMethod;
  }


  public StackTraceElement lineNumber(Integer lineNumber)
  {

    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * @return lineNumber
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getLineNumber()
  {
    return lineNumber;
  }


  public void setLineNumber(Integer lineNumber)
  {
    this.lineNumber = lineNumber;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    StackTraceElement stackTraceElement = (StackTraceElement) o;
    return Objects.equals(this.className, stackTraceElement.className) &&
            Objects.equals(this.methodName, stackTraceElement.methodName) &&
            Objects.equals(this.fileName, stackTraceElement.fileName) &&
            Objects.equals(this.nativeMethod, stackTraceElement.nativeMethod) &&
            Objects.equals(this.lineNumber, stackTraceElement.lineNumber);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(className, methodName, fileName, nativeMethod, lineNumber);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class StackTraceElement {\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    methodName: ").append(toIndentedString(methodName)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    nativeMethod: ").append(toIndentedString(nativeMethod)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

