/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * DTO for W2P template variable meta-data.
 */
@ApiModel(description = "DTO for W2P template variable meta-data.")

public class WtpTemplateVariableMetadataDto
{
    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;

    public static final String SERIALIZED_NAME_VARIABLE_TYPE_ID = "variableTypeId";
    @SerializedName(SERIALIZED_NAME_VARIABLE_TYPE_ID)
    private Integer variableTypeId;

    public static final String SERIALIZED_NAME_TEMPLATE_META_DATA = "templateMetaData";
    @SerializedName(SERIALIZED_NAME_TEMPLATE_META_DATA)
    private String templateMetaData;

    public static final String SERIALIZED_NAME_JOB_VARIABLE_ID = "jobVariableId";
    @SerializedName(SERIALIZED_NAME_JOB_VARIABLE_ID)
    private Integer jobVariableId;

    public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
    @SerializedName(SERIALIZED_NAME_LOCALE_ID)
    private Integer localeId;

    public static final String SERIALIZED_NAME_MAPPING_TYPE = "mappingType";
    @SerializedName(SERIALIZED_NAME_MAPPING_TYPE)
    private String mappingType;


    public WtpTemplateVariableMetadataDto id(Integer id)
    {

        this.id = id;
        return this;
    }

    /**
     * @return id
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getId()
    {
        return id;
    }


    public void setId(Integer id)
    {
        this.id = id;
    }


    public WtpTemplateVariableMetadataDto variableTypeId(Integer variableTypeId)
    {

        this.variableTypeId = variableTypeId;
        return this;
    }

    /**
     * @return variableTypeId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getVariableTypeId()
    {
        return variableTypeId;
    }


    public void setVariableTypeId(Integer variableTypeId)
    {
        this.variableTypeId = variableTypeId;
    }


    public WtpTemplateVariableMetadataDto templateMetaData(String templateMetaData)
    {

        this.templateMetaData = templateMetaData;
        return this;
    }

    /**
     * @return templateMetaData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getTemplateMetaData()
    {
        return templateMetaData;
    }


    public void setTemplateMetaData(String templateMetaData)
    {
        this.templateMetaData = templateMetaData;
    }


    public WtpTemplateVariableMetadataDto jobVariableId(Integer jobVariableId)
    {

        this.jobVariableId = jobVariableId;
        return this;
    }

    /**
     * @return jobVariableId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getJobVariableId()
    {
        return jobVariableId;
    }


    public void setJobVariableId(Integer jobVariableId)
    {
        this.jobVariableId = jobVariableId;
    }


    public WtpTemplateVariableMetadataDto localeId(Integer localeId)
    {

        this.localeId = localeId;
        return this;
    }

    /**
     * @return localeId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getLocaleId()
    {
        return localeId;
    }


    public void setLocaleId(Integer localeId)
    {
        this.localeId = localeId;
    }


    public WtpTemplateVariableMetadataDto mappingType(String mappingType)
    {

        this.mappingType = mappingType;
        return this;
    }

    /**
     * @return mappingType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getMappingType()
    {
        return mappingType;
    }


    public void setMappingType(String mappingType)
    {
        this.mappingType = mappingType;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        WtpTemplateVariableMetadataDto wtpTemplateVariableMetadataDto = (WtpTemplateVariableMetadataDto) o;
        return Objects.equals(this.id, wtpTemplateVariableMetadataDto.id) &&
                Objects.equals(this.variableTypeId, wtpTemplateVariableMetadataDto.variableTypeId) &&
                Objects.equals(this.templateMetaData, wtpTemplateVariableMetadataDto.templateMetaData) &&
                Objects.equals(this.jobVariableId, wtpTemplateVariableMetadataDto.jobVariableId) &&
                Objects.equals(this.localeId, wtpTemplateVariableMetadataDto.localeId) &&
                Objects.equals(this.mappingType, wtpTemplateVariableMetadataDto.mappingType);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(id, variableTypeId, templateMetaData, jobVariableId, localeId, mappingType);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class WtpTemplateVariableMetadataDto {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    variableTypeId: ").append(toIndentedString(variableTypeId)).append("\n");
        sb.append("    templateMetaData: ").append(toIndentedString(templateMetaData)).append("\n");
        sb.append("    jobVariableId: ").append(toIndentedString(jobVariableId)).append("\n");
        sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
        sb.append("    mappingType: ").append(toIndentedString(mappingType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

