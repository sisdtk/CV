/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 *
 */
@ApiModel(description = "")

public class RuntimeException
{
  public static final String SERIALIZED_NAME_LOCALIZED_MESSAGE = "localizedMessage";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_MESSAGE)
  private String localizedMessage;

  public static final String SERIALIZED_NAME_STACK_TRACE = "stackTrace";
  @SerializedName(SERIALIZED_NAME_STACK_TRACE)
  private List<StackTraceElement> stackTrace = null;

  public static final String SERIALIZED_NAME_SUPPRESSED = "suppressed";
  @SerializedName(SERIALIZED_NAME_SUPPRESSED)
  private List<Throwable> suppressed = null;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_CAUSE = "cause";
  @SerializedName(SERIALIZED_NAME_CAUSE)
  private Throwable cause;


  public RuntimeException localizedMessage(String localizedMessage)
  {

    this.localizedMessage = localizedMessage;
    return this;
  }

  /**
   * @return localizedMessage
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalizedMessage()
  {
    return localizedMessage;
  }


  public void setLocalizedMessage(String localizedMessage)
  {
    this.localizedMessage = localizedMessage;
  }


  public RuntimeException stackTrace(List<StackTraceElement> stackTrace)
  {

    this.stackTrace = stackTrace;
    return this;
  }

  public RuntimeException addStackTraceItem(StackTraceElement stackTraceItem)
  {
    if (this.stackTrace == null)
    {
      this.stackTrace = new ArrayList<StackTraceElement>();
    }
    this.stackTrace.add(stackTraceItem);
    return this;
  }

  /**
   * @return stackTrace
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StackTraceElement> getStackTrace()
  {
    return stackTrace;
  }


  public void setStackTrace(List<StackTraceElement> stackTrace)
  {
    this.stackTrace = stackTrace;
  }


  public RuntimeException suppressed(List<Throwable> suppressed)
  {

    this.suppressed = suppressed;
    return this;
  }

  public RuntimeException addSuppressedItem(Throwable suppressedItem)
  {
    if (this.suppressed == null)
    {
      this.suppressed = new ArrayList<Throwable>();
    }
    this.suppressed.add(suppressedItem);
    return this;
  }

  /**
   * @return suppressed
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Throwable> getSuppressed()
  {
    return suppressed;
  }


  public void setSuppressed(List<Throwable> suppressed)
  {
    this.suppressed = suppressed;
  }


  public RuntimeException message(String message)
  {

    this.message = message;
    return this;
  }

  /**
   * @return message
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage()
  {
    return message;
  }


  public void setMessage(String message)
  {
    this.message = message;
  }


  public RuntimeException cause(Throwable cause)
  {

    this.cause = cause;
    return this;
  }

  /**
   * Get cause
   *
   * @return cause
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Throwable getCause()
  {
    return cause;
  }


  public void setCause(Throwable cause)
  {
    this.cause = cause;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    RuntimeException runtimeException = (RuntimeException) o;
    return Objects.equals(this.localizedMessage, runtimeException.localizedMessage) &&
            Objects.equals(this.stackTrace, runtimeException.stackTrace) &&
            Objects.equals(this.suppressed, runtimeException.suppressed) &&
            Objects.equals(this.message, runtimeException.message) &&
            Objects.equals(this.cause, runtimeException.cause);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(localizedMessage, stackTrace, suppressed, message, cause);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuntimeException {\n");
    sb.append("    localizedMessage: ").append(toIndentedString(localizedMessage)).append("\n");
    sb.append("    stackTrace: ").append(toIndentedString(stackTrace)).append("\n");
    sb.append("    suppressed: ").append(toIndentedString(suppressed)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

