/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 *
 */
@ApiModel(description = "")

public class MaplBQuarterDto
{
  public static final String SERIALIZED_NAME_PLANNED = "planned";
  @SerializedName(SERIALIZED_NAME_PLANNED)
  private List<BigDecimal> planned = null;

  public static final String SERIALIZED_NAME_COMMITED = "commited";
  @SerializedName(SERIALIZED_NAME_COMMITED)
  private List<BigDecimal> commited = null;

  public static final String SERIALIZED_NAME_ACTUAL = "actual";
  @SerializedName(SERIALIZED_NAME_ACTUAL)
  private List<BigDecimal> actual = null;

  public static final String SERIALIZED_NAME_PROJECTED = "projected";
  @SerializedName(SERIALIZED_NAME_PROJECTED)
  private List<BigDecimal> projected = null;

  public static final String SERIALIZED_NAME_REMAINIG = "remainig";
  @SerializedName(SERIALIZED_NAME_REMAINIG)
  private List<BigDecimal> remainig = null;

  public static final String SERIALIZED_NAME_MDF = "mdf";
  @SerializedName(SERIALIZED_NAME_MDF)
  private List<BigDecimal> mdf = null;

  public static final String SERIALIZED_NAME_CALCULATED = "calculated";
  @SerializedName(SERIALIZED_NAME_CALCULATED)
  private List<BigDecimal> calculated = null;


  public MaplBQuarterDto planned(List<BigDecimal> planned)
  {

    this.planned = planned;
    return this;
  }

  public MaplBQuarterDto addPlannedItem(BigDecimal plannedItem)
  {
    if (this.planned == null)
    {
      this.planned = new ArrayList<BigDecimal>();
    }
    this.planned.add(plannedItem);
    return this;
  }

  /**
   * @return planned
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BigDecimal> getPlanned()
  {
    return planned;
  }


  public void setPlanned(List<BigDecimal> planned)
  {
    this.planned = planned;
  }


  public MaplBQuarterDto commited(List<BigDecimal> commited)
  {

    this.commited = commited;
    return this;
  }

  public MaplBQuarterDto addCommitedItem(BigDecimal commitedItem)
  {
    if (this.commited == null)
    {
      this.commited = new ArrayList<BigDecimal>();
    }
    this.commited.add(commitedItem);
    return this;
  }

  /**
   * @return commited
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BigDecimal> getCommited()
  {
    return commited;
  }


  public void setCommited(List<BigDecimal> commited)
  {
    this.commited = commited;
  }


  public MaplBQuarterDto actual(List<BigDecimal> actual)
  {

    this.actual = actual;
    return this;
  }

  public MaplBQuarterDto addActualItem(BigDecimal actualItem)
  {
    if (this.actual == null)
    {
      this.actual = new ArrayList<BigDecimal>();
    }
    this.actual.add(actualItem);
    return this;
  }

  /**
   * @return actual
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BigDecimal> getActual()
  {
    return actual;
  }


  public void setActual(List<BigDecimal> actual)
  {
    this.actual = actual;
  }


  public MaplBQuarterDto projected(List<BigDecimal> projected)
  {

    this.projected = projected;
    return this;
  }

  public MaplBQuarterDto addProjectedItem(BigDecimal projectedItem)
  {
    if (this.projected == null)
    {
      this.projected = new ArrayList<BigDecimal>();
    }
    this.projected.add(projectedItem);
    return this;
  }

  /**
   * @return projected
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BigDecimal> getProjected()
  {
    return projected;
  }


  public void setProjected(List<BigDecimal> projected)
  {
    this.projected = projected;
  }


  public MaplBQuarterDto remainig(List<BigDecimal> remainig)
  {

    this.remainig = remainig;
    return this;
  }

  public MaplBQuarterDto addRemainigItem(BigDecimal remainigItem)
  {
    if (this.remainig == null)
    {
      this.remainig = new ArrayList<BigDecimal>();
    }
    this.remainig.add(remainigItem);
    return this;
  }

  /**
   * @return remainig
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BigDecimal> getRemainig()
  {
    return remainig;
  }


  public void setRemainig(List<BigDecimal> remainig)
  {
    this.remainig = remainig;
  }


  public MaplBQuarterDto mdf(List<BigDecimal> mdf)
  {

    this.mdf = mdf;
    return this;
  }

  public MaplBQuarterDto addMdfItem(BigDecimal mdfItem)
  {
    if (this.mdf == null)
    {
      this.mdf = new ArrayList<BigDecimal>();
    }
    this.mdf.add(mdfItem);
    return this;
  }

  /**
   * @return mdf
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BigDecimal> getMdf()
  {
    return mdf;
  }


  public void setMdf(List<BigDecimal> mdf)
  {
    this.mdf = mdf;
  }


  public MaplBQuarterDto calculated(List<BigDecimal> calculated)
  {

    this.calculated = calculated;
    return this;
  }

  public MaplBQuarterDto addCalculatedItem(BigDecimal calculatedItem)
  {
    if (this.calculated == null)
    {
      this.calculated = new ArrayList<BigDecimal>();
    }
    this.calculated.add(calculatedItem);
    return this;
  }

  /**
   * @return calculated
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BigDecimal> getCalculated()
  {
    return calculated;
  }


  public void setCalculated(List<BigDecimal> calculated)
  {
    this.calculated = calculated;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    MaplBQuarterDto maplBQuarterDto = (MaplBQuarterDto) o;
    return Objects.equals(this.planned, maplBQuarterDto.planned) &&
            Objects.equals(this.commited, maplBQuarterDto.commited) &&
            Objects.equals(this.actual, maplBQuarterDto.actual) &&
            Objects.equals(this.projected, maplBQuarterDto.projected) &&
            Objects.equals(this.remainig, maplBQuarterDto.remainig) &&
            Objects.equals(this.mdf, maplBQuarterDto.mdf) &&
            Objects.equals(this.calculated, maplBQuarterDto.calculated);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(planned, commited, actual, projected, remainig, mdf, calculated);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class MaplBQuarterDto {\n");
    sb.append("    planned: ").append(toIndentedString(planned)).append("\n");
    sb.append("    commited: ").append(toIndentedString(commited)).append("\n");
    sb.append("    actual: ").append(toIndentedString(actual)).append("\n");
    sb.append("    projected: ").append(toIndentedString(projected)).append("\n");
    sb.append("    remainig: ").append(toIndentedString(remainig)).append("\n");
    sb.append("    mdf: ").append(toIndentedString(mdf)).append("\n");
    sb.append("    calculated: ").append(toIndentedString(calculated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

