/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 *
 */
@ApiModel(description = "")

public class OldWorkflowType
{
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CREATOR_USER_I_D = "creatorUserID";
  @SerializedName(SERIALIZED_NAME_CREATOR_USER_I_D)
  private Integer creatorUserID;

  public static final String SERIALIZED_NAME_WORKFLOW_TYPE_ID = "workflowTypeId";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_TYPE_ID)
  private Integer workflowTypeId;

  public static final String SERIALIZED_NAME_WORKFLOW_STEP_TEMPLATES = "workflowStepTemplates";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_STEP_TEMPLATES)
  private List<WorkflowStepTemplate> workflowStepTemplates = null;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private Integer creationDate;

  public static final String SERIALIZED_NAME_LAST_UPDATE = "lastUpdate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE)
  private Integer lastUpdate;

  public static final String SERIALIZED_NAME_IS_DELETED = "isDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_PICKABLE_CONFIGURATION = "pickableConfiguration";
  @SerializedName(SERIALIZED_NAME_PICKABLE_CONFIGURATION)
  private Integer pickableConfiguration;

  public static final String SERIALIZED_NAME_REUSABLE = "reusable";
  @SerializedName(SERIALIZED_NAME_REUSABLE)
  private Boolean reusable;

  public static final String SERIALIZED_NAME_REUSABLE_UPDATE_DATE = "reusableUpdateDate";
  @SerializedName(SERIALIZED_NAME_REUSABLE_UPDATE_DATE)
  private Integer reusableUpdateDate;

  public static final String SERIALIZED_NAME_REAPPROVAL_REQUIRED = "reapprovalRequired";
  @SerializedName(SERIALIZED_NAME_REAPPROVAL_REQUIRED)
  private Integer reapprovalRequired;


  public OldWorkflowType name(String name)
  {

    this.name = name;
    return this;
  }

  /**
   * @return name
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName()
  {
    return name;
  }


  public void setName(String name)
  {
    this.name = name;
  }


  public OldWorkflowType description(String description)
  {

    this.description = description;
    return this;
  }

  /**
   * @return description
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription()
  {
    return description;
  }


  public void setDescription(String description)
  {
    this.description = description;
  }


  public OldWorkflowType creatorUserID(Integer creatorUserID)
  {

    this.creatorUserID = creatorUserID;
    return this;
  }

  /**
   * @return creatorUserID
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreatorUserID()
  {
    return creatorUserID;
  }


  public void setCreatorUserID(Integer creatorUserID)
  {
    this.creatorUserID = creatorUserID;
  }


  public OldWorkflowType workflowTypeId(Integer workflowTypeId)
  {

    this.workflowTypeId = workflowTypeId;
    return this;
  }

  /**
   * @return workflowTypeId
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWorkflowTypeId()
  {
    return workflowTypeId;
  }


  public void setWorkflowTypeId(Integer workflowTypeId)
  {
    this.workflowTypeId = workflowTypeId;
  }


  public OldWorkflowType workflowStepTemplates(List<WorkflowStepTemplate> workflowStepTemplates)
  {

    this.workflowStepTemplates = workflowStepTemplates;
    return this;
  }

  public OldWorkflowType addWorkflowStepTemplatesItem(WorkflowStepTemplate workflowStepTemplatesItem)
  {
    if (this.workflowStepTemplates == null)
    {
      this.workflowStepTemplates = new ArrayList<WorkflowStepTemplate>();
    }
    this.workflowStepTemplates.add(workflowStepTemplatesItem);
    return this;
  }

  /**
   * @return workflowStepTemplates
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<WorkflowStepTemplate> getWorkflowStepTemplates()
  {
    return workflowStepTemplates;
  }


  public void setWorkflowStepTemplates(List<WorkflowStepTemplate> workflowStepTemplates)
  {
    this.workflowStepTemplates = workflowStepTemplates;
  }


  public OldWorkflowType creationDate(Integer creationDate)
  {

    this.creationDate = creationDate;
    return this;
  }

  /**
   * @return creationDate
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreationDate()
  {
    return creationDate;
  }


  public void setCreationDate(Integer creationDate)
  {
    this.creationDate = creationDate;
  }


  public OldWorkflowType lastUpdate(Integer lastUpdate)
  {

    this.lastUpdate = lastUpdate;
    return this;
  }

  /**
   * @return lastUpdate
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastUpdate()
  {
    return lastUpdate;
  }


  public void setLastUpdate(Integer lastUpdate)
  {
    this.lastUpdate = lastUpdate;
  }


  public OldWorkflowType isDeleted(Boolean isDeleted)
  {

    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * @return isDeleted
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDeleted()
  {
    return isDeleted;
  }


  public void setIsDeleted(Boolean isDeleted)
  {
    this.isDeleted = isDeleted;
  }


  public OldWorkflowType pickableConfiguration(Integer pickableConfiguration)
  {

    this.pickableConfiguration = pickableConfiguration;
    return this;
  }

  /**
   * @return pickableConfiguration
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPickableConfiguration()
  {
    return pickableConfiguration;
  }


  public void setPickableConfiguration(Integer pickableConfiguration)
  {
    this.pickableConfiguration = pickableConfiguration;
  }


  public OldWorkflowType reusable(Boolean reusable)
  {

    this.reusable = reusable;
    return this;
  }

  /**
   * @return reusable
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReusable()
  {
    return reusable;
  }


  public void setReusable(Boolean reusable)
  {
    this.reusable = reusable;
  }


  public OldWorkflowType reusableUpdateDate(Integer reusableUpdateDate)
  {

    this.reusableUpdateDate = reusableUpdateDate;
    return this;
  }

  /**
   * @return reusableUpdateDate
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReusableUpdateDate()
  {
    return reusableUpdateDate;
  }


  public void setReusableUpdateDate(Integer reusableUpdateDate)
  {
    this.reusableUpdateDate = reusableUpdateDate;
  }


  public OldWorkflowType reapprovalRequired(Integer reapprovalRequired)
  {

    this.reapprovalRequired = reapprovalRequired;
    return this;
  }

  /**
   * @return reapprovalRequired
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReapprovalRequired()
  {
    return reapprovalRequired;
  }


  public void setReapprovalRequired(Integer reapprovalRequired)
  {
    this.reapprovalRequired = reapprovalRequired;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    OldWorkflowType oldWorkflowType = (OldWorkflowType) o;
    return Objects.equals(this.name, oldWorkflowType.name) &&
            Objects.equals(this.description, oldWorkflowType.description) &&
            Objects.equals(this.creatorUserID, oldWorkflowType.creatorUserID) &&
            Objects.equals(this.workflowTypeId, oldWorkflowType.workflowTypeId) &&
            Objects.equals(this.workflowStepTemplates, oldWorkflowType.workflowStepTemplates) &&
            Objects.equals(this.creationDate, oldWorkflowType.creationDate) &&
            Objects.equals(this.lastUpdate, oldWorkflowType.lastUpdate) &&
            Objects.equals(this.isDeleted, oldWorkflowType.isDeleted) &&
            Objects.equals(this.pickableConfiguration, oldWorkflowType.pickableConfiguration) &&
            Objects.equals(this.reusable, oldWorkflowType.reusable) &&
            Objects.equals(this.reusableUpdateDate, oldWorkflowType.reusableUpdateDate) &&
            Objects.equals(this.reapprovalRequired, oldWorkflowType.reapprovalRequired);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(name, description, creatorUserID, workflowTypeId, workflowStepTemplates, creationDate, lastUpdate, isDeleted, pickableConfiguration, reusable, reusableUpdateDate, reapprovalRequired);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OldWorkflowType {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    creatorUserID: ").append(toIndentedString(creatorUserID)).append("\n");
    sb.append("    workflowTypeId: ").append(toIndentedString(workflowTypeId)).append("\n");
    sb.append("    workflowStepTemplates: ").append(toIndentedString(workflowStepTemplates)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    pickableConfiguration: ").append(toIndentedString(pickableConfiguration)).append("\n");
    sb.append("    reusable: ").append(toIndentedString(reusable)).append("\n");
    sb.append("    reusableUpdateDate: ").append(toIndentedString(reusableUpdateDate)).append("\n");
    sb.append("    reapprovalRequired: ").append(toIndentedString(reapprovalRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

