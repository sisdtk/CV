/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 *
 */
@ApiModel(description = "")

public class NoDimensionValueException
{
    public static final String SERIALIZED_NAME_LOCALIZED_MESSAGE = "localizedMessage";
    @SerializedName(SERIALIZED_NAME_LOCALIZED_MESSAGE)
    private String localizedMessage;

    public static final String SERIALIZED_NAME_STACK_TRACE = "stackTrace";
    @SerializedName(SERIALIZED_NAME_STACK_TRACE)
    private List<StackTraceElement> stackTrace = null;

    public static final String SERIALIZED_NAME_SUPPRESSED = "suppressed";
    @SerializedName(SERIALIZED_NAME_SUPPRESSED)
    private List<Throwable> suppressed = null;

    public static final String SERIALIZED_NAME_MESSAGE = "message";
    @SerializedName(SERIALIZED_NAME_MESSAGE)
    private String message;

    public static final String SERIALIZED_NAME_CAUSE = "cause";
    @SerializedName(SERIALIZED_NAME_CAUSE)
    private Throwable cause;

    public static final String SERIALIZED_NAME_PROPOSED_VALUE = "proposedValue";
    @SerializedName(SERIALIZED_NAME_PROPOSED_VALUE)
    private MaplDimensionValueViewBase proposedValue;

    public static final String SERIALIZED_NAME_POSSIBLE_VALUES = "possibleValues";
    @SerializedName(SERIALIZED_NAME_POSSIBLE_VALUES)
    private List<MaplDimensionPossibleValueDto> possibleValues = null;


    public NoDimensionValueException localizedMessage(String localizedMessage)
    {

        this.localizedMessage = localizedMessage;
        return this;
    }

    /**
     * @return localizedMessage
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getLocalizedMessage()
    {
        return localizedMessage;
    }


    public void setLocalizedMessage(String localizedMessage)
    {
        this.localizedMessage = localizedMessage;
    }


    public NoDimensionValueException stackTrace(List<StackTraceElement> stackTrace)
    {

        this.stackTrace = stackTrace;
        return this;
    }

    public NoDimensionValueException addStackTraceItem(StackTraceElement stackTraceItem)
    {
        if (this.stackTrace == null)
        {
            this.stackTrace = new ArrayList<StackTraceElement>();
        }
        this.stackTrace.add(stackTraceItem);
        return this;
    }

    /**
     * @return stackTrace
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<StackTraceElement> getStackTrace()
    {
        return stackTrace;
    }


    public void setStackTrace(List<StackTraceElement> stackTrace)
    {
        this.stackTrace = stackTrace;
    }


    public NoDimensionValueException suppressed(List<Throwable> suppressed)
    {

        this.suppressed = suppressed;
        return this;
    }

    public NoDimensionValueException addSuppressedItem(Throwable suppressedItem)
    {
        if (this.suppressed == null)
        {
            this.suppressed = new ArrayList<Throwable>();
        }
        this.suppressed.add(suppressedItem);
        return this;
    }

    /**
     * @return suppressed
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Throwable> getSuppressed()
    {
        return suppressed;
    }


    public void setSuppressed(List<Throwable> suppressed)
    {
        this.suppressed = suppressed;
    }


    public NoDimensionValueException message(String message)
    {

        this.message = message;
        return this;
    }

    /**
     * @return message
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getMessage()
    {
        return message;
    }


    public void setMessage(String message)
    {
        this.message = message;
    }


    public NoDimensionValueException cause(Throwable cause)
    {

        this.cause = cause;
        return this;
    }

    /**
     * Get cause
     *
     * @return cause
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Throwable getCause()
    {
        return cause;
    }


    public void setCause(Throwable cause)
    {
        this.cause = cause;
    }


    public NoDimensionValueException proposedValue(MaplDimensionValueViewBase proposedValue)
    {

        this.proposedValue = proposedValue;
        return this;
    }

    /**
     * Get proposedValue
     *
     * @return proposedValue
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public MaplDimensionValueViewBase getProposedValue()
    {
        return proposedValue;
    }


    public void setProposedValue(MaplDimensionValueViewBase proposedValue)
    {
        this.proposedValue = proposedValue;
    }


    public NoDimensionValueException possibleValues(List<MaplDimensionPossibleValueDto> possibleValues)
    {

        this.possibleValues = possibleValues;
        return this;
    }

    public NoDimensionValueException addPossibleValuesItem(MaplDimensionPossibleValueDto possibleValuesItem)
    {
        if (this.possibleValues == null)
        {
            this.possibleValues = new ArrayList<MaplDimensionPossibleValueDto>();
        }
        this.possibleValues.add(possibleValuesItem);
        return this;
    }

    /**
     * @return possibleValues
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<MaplDimensionPossibleValueDto> getPossibleValues()
    {
        return possibleValues;
    }


    public void setPossibleValues(List<MaplDimensionPossibleValueDto> possibleValues)
    {
        this.possibleValues = possibleValues;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NoDimensionValueException noDimensionValueException = (NoDimensionValueException) o;
        return Objects.equals(this.localizedMessage, noDimensionValueException.localizedMessage) &&
                Objects.equals(this.stackTrace, noDimensionValueException.stackTrace) &&
                Objects.equals(this.suppressed, noDimensionValueException.suppressed) &&
                Objects.equals(this.message, noDimensionValueException.message) &&
                Objects.equals(this.cause, noDimensionValueException.cause) &&
                Objects.equals(this.proposedValue, noDimensionValueException.proposedValue) &&
                Objects.equals(this.possibleValues, noDimensionValueException.possibleValues);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(localizedMessage, stackTrace, suppressed, message, cause, proposedValue, possibleValues);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NoDimensionValueException {\n");
        sb.append("    localizedMessage: ").append(toIndentedString(localizedMessage)).append("\n");
        sb.append("    stackTrace: ").append(toIndentedString(stackTrace)).append("\n");
        sb.append("    suppressed: ").append(toIndentedString(suppressed)).append("\n");
        sb.append("    message: ").append(toIndentedString(message)).append("\n");
        sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
        sb.append("    proposedValue: ").append(toIndentedString(proposedValue)).append("\n");
        sb.append("    possibleValues: ").append(toIndentedString(possibleValues)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

