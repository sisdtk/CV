/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * DTO for SingleInputLineColumn variable type.
 */
@ApiModel(description = "DTO for SingleInputLineColumn variable type.")

public class SingleInputLineColumnDto
{
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_META_TYPE_ID = "metaTypeId";
  @SerializedName(SERIALIZED_NAME_META_TYPE_ID)
  private Integer metaTypeId;

  public static final String SERIALIZED_NAME_META_TYPE_NAME = "metaTypeName";
  @SerializedName(SERIALIZED_NAME_META_TYPE_NAME)
  private String metaTypeName;

  public static final String SERIALIZED_NAME_UNIQUE_NAME = "uniqueName";
  @SerializedName(SERIALIZED_NAME_UNIQUE_NAME)
  private String uniqueName;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_RAW_LABEL = "rawLabel";
  @SerializedName(SERIALIZED_NAME_RAW_LABEL)
  private String rawLabel;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private Integer mode;

  public static final String SERIALIZED_NAME_TECHNICAL_NAME = "technicalName";
  @SerializedName(SERIALIZED_NAME_TECHNICAL_NAME)
  private String technicalName;

  public static final String SERIALIZED_NAME_SHARED_LOCALE = "sharedLocale";
  @SerializedName(SERIALIZED_NAME_SHARED_LOCALE)
  private Boolean sharedLocale;

  public static final String SERIALIZED_NAME_HELP_TEXT = "helpText";
  @SerializedName(SERIALIZED_NAME_HELP_TEXT)
  private String helpText;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private VisibilityDto visibility;

  public static final String SERIALIZED_NAME_DEPENDS_FROM_VARIABLE_ID = "dependsFromVariableId";
  @SerializedName(SERIALIZED_NAME_DEPENDS_FROM_VARIABLE_ID)
  private Integer dependsFromVariableId;

  public static final String SERIALIZED_NAME_DEPENDS_FROM_VARIABLE_VALUES = "dependsFromVariableValues";
  @SerializedName(SERIALIZED_NAME_DEPENDS_FROM_VARIABLE_VALUES)
  private List<String> dependsFromVariableValues = null;

  public static final String SERIALIZED_NAME_TYPE_SPANNING = "typeSpanning";
  @SerializedName(SERIALIZED_NAME_TYPE_SPANNING)
  private Boolean typeSpanning;

  public static final String SERIALIZED_NAME_SYSTEM = "system";
  @SerializedName(SERIALIZED_NAME_SYSTEM)
  private Boolean system;

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "storageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private Integer storageType;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Integer width;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_MAX_CHARACTERS = "maxCharacters";
  @SerializedName(SERIALIZED_NAME_MAX_CHARACTERS)
  private Integer maxCharacters;

  public static final String SERIALIZED_NAME_REGEXP = "regexp";
  @SerializedName(SERIALIZED_NAME_REGEXP)
  private String regexp;

  public static final String SERIALIZED_NAME_INPUT_SIZE = "inputSize";
  @SerializedName(SERIALIZED_NAME_INPUT_SIZE)
  private Integer inputSize;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public static final String SERIALIZED_NAME_DEFAULT_VALUE = "defaultValue";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE)
  private String defaultValue;

  public static final String SERIALIZED_NAME_FORMER_TECHNICAL_VALUE = "formerTechnicalValue";
  @SerializedName(SERIALIZED_NAME_FORMER_TECHNICAL_VALUE)
  private String formerTechnicalValue;

  public static final String SERIALIZED_NAME_DYNAMIC_TABLE_INDEX = "dynamicTableIndex";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_TABLE_INDEX)
  private String dynamicTableIndex;

  public static final String SERIALIZED_NAME_PREFILLING = "prefilling";
  @SerializedName(SERIALIZED_NAME_PREFILLING)
  private PrefillingDto prefilling;


  public SingleInputLineColumnDto id(Integer id)
  {

    this.id = id;
    return this;
  }

  /**
   * @return id
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId()
  {
    return id;
  }


  public void setId(Integer id)
  {
    this.id = id;
  }


  public SingleInputLineColumnDto metaTypeId(Integer metaTypeId)
  {

    this.metaTypeId = metaTypeId;
    return this;
  }

  /**
   * @return metaTypeId
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMetaTypeId()
  {
    return metaTypeId;
  }


  public void setMetaTypeId(Integer metaTypeId)
  {
    this.metaTypeId = metaTypeId;
  }


  public SingleInputLineColumnDto metaTypeName(String metaTypeName)
  {

    this.metaTypeName = metaTypeName;
    return this;
  }

  /**
   * @return metaTypeName
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMetaTypeName()
  {
    return metaTypeName;
  }


  public void setMetaTypeName(String metaTypeName)
  {
    this.metaTypeName = metaTypeName;
  }


  public SingleInputLineColumnDto uniqueName(String uniqueName)
  {

    this.uniqueName = uniqueName;
    return this;
  }

  /**
   * @return uniqueName
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUniqueName()
  {
    return uniqueName;
  }


  public void setUniqueName(String uniqueName)
  {
    this.uniqueName = uniqueName;
  }


  public SingleInputLineColumnDto displayName(String displayName)
  {

    this.displayName = displayName;
    return this;
  }

  /**
   * @return displayName
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplayName()
  {
    return displayName;
  }


  public void setDisplayName(String displayName)
  {
    this.displayName = displayName;
  }


  public SingleInputLineColumnDto rawLabel(String rawLabel)
  {

    this.rawLabel = rawLabel;
    return this;
  }

  /**
   * @return rawLabel
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRawLabel()
  {
    return rawLabel;
  }


  public void setRawLabel(String rawLabel)
  {
    this.rawLabel = rawLabel;
  }


  public SingleInputLineColumnDto mode(Integer mode)
  {

    this.mode = mode;
    return this;
  }

  /**
   * @return mode
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMode()
  {
    return mode;
  }


  public void setMode(Integer mode)
  {
    this.mode = mode;
  }


  public SingleInputLineColumnDto technicalName(String technicalName)
  {

    this.technicalName = technicalName;
    return this;
  }

  /**
   * @return technicalName
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTechnicalName()
  {
    return technicalName;
  }


  public void setTechnicalName(String technicalName)
  {
    this.technicalName = technicalName;
  }


  public SingleInputLineColumnDto sharedLocale(Boolean sharedLocale)
  {

    this.sharedLocale = sharedLocale;
    return this;
  }

  /**
   * @return sharedLocale
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSharedLocale()
  {
    return sharedLocale;
  }


  public void setSharedLocale(Boolean sharedLocale)
  {
    this.sharedLocale = sharedLocale;
  }


  public SingleInputLineColumnDto helpText(String helpText)
  {

    this.helpText = helpText;
    return this;
  }

  /**
   * @return helpText
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHelpText()
  {
    return helpText;
  }


  public void setHelpText(String helpText)
  {
    this.helpText = helpText;
  }


  public SingleInputLineColumnDto visibility(VisibilityDto visibility)
  {

    this.visibility = visibility;
    return this;
  }

  /**
   * Get visibility
   *
   * @return visibility
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VisibilityDto getVisibility()
  {
    return visibility;
  }


  public void setVisibility(VisibilityDto visibility)
  {
    this.visibility = visibility;
  }


  public SingleInputLineColumnDto dependsFromVariableId(Integer dependsFromVariableId)
  {

    this.dependsFromVariableId = dependsFromVariableId;
    return this;
  }

  /**
   * @return dependsFromVariableId
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDependsFromVariableId()
  {
    return dependsFromVariableId;
  }


  public void setDependsFromVariableId(Integer dependsFromVariableId)
  {
    this.dependsFromVariableId = dependsFromVariableId;
  }


  public SingleInputLineColumnDto dependsFromVariableValues(List<String> dependsFromVariableValues)
  {

    this.dependsFromVariableValues = dependsFromVariableValues;
    return this;
  }

  public SingleInputLineColumnDto addDependsFromVariableValuesItem(String dependsFromVariableValuesItem)
  {
    if (this.dependsFromVariableValues == null)
    {
      this.dependsFromVariableValues = new ArrayList<String>();
    }
    this.dependsFromVariableValues.add(dependsFromVariableValuesItem);
    return this;
  }

  /**
   * @return dependsFromVariableValues
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getDependsFromVariableValues()
  {
    return dependsFromVariableValues;
  }


  public void setDependsFromVariableValues(List<String> dependsFromVariableValues)
  {
    this.dependsFromVariableValues = dependsFromVariableValues;
  }


  public SingleInputLineColumnDto typeSpanning(Boolean typeSpanning)
  {

    this.typeSpanning = typeSpanning;
    return this;
  }

  /**
   * @return typeSpanning
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTypeSpanning()
  {
    return typeSpanning;
  }


  public void setTypeSpanning(Boolean typeSpanning)
  {
    this.typeSpanning = typeSpanning;
  }


  public SingleInputLineColumnDto system(Boolean system)
  {

    this.system = system;
    return this;
  }

  /**
   * @return system
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSystem()
  {
    return system;
  }


  public void setSystem(Boolean system)
  {
    this.system = system;
  }


  public SingleInputLineColumnDto storageType(Integer storageType)
  {

    this.storageType = storageType;
    return this;
  }

  /**
   * @return storageType
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStorageType()
  {
    return storageType;
  }


  public void setStorageType(Integer storageType)
  {
    this.storageType = storageType;
  }


  public SingleInputLineColumnDto width(Integer width)
  {

    this.width = width;
    return this;
  }

  /**
   * @return width
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWidth()
  {
    return width;
  }


  public void setWidth(Integer width)
  {
    this.width = width;
  }


  public SingleInputLineColumnDto position(Integer position)
  {

    this.position = position;
    return this;
  }

  /**
   * @return position
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPosition()
  {
    return position;
  }


  public void setPosition(Integer position)
  {
    this.position = position;
  }


  public SingleInputLineColumnDto maxCharacters(Integer maxCharacters)
  {

    this.maxCharacters = maxCharacters;
    return this;
  }

  /**
   * @return maxCharacters
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxCharacters()
  {
    return maxCharacters;
  }


  public void setMaxCharacters(Integer maxCharacters)
  {
    this.maxCharacters = maxCharacters;
  }


  public SingleInputLineColumnDto regexp(String regexp)
  {

    this.regexp = regexp;
    return this;
  }

  /**
   * @return regexp
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRegexp()
  {
    return regexp;
  }


  public void setRegexp(String regexp)
  {
    this.regexp = regexp;
  }


  public SingleInputLineColumnDto inputSize(Integer inputSize)
  {

    this.inputSize = inputSize;
    return this;
  }

  /**
   * @return inputSize
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getInputSize()
  {
    return inputSize;
  }


  public void setInputSize(Integer inputSize)
  {
    this.inputSize = inputSize;
  }


  public SingleInputLineColumnDto suffix(String suffix)
  {

    this.suffix = suffix;
    return this;
  }

  /**
   * @return suffix
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSuffix()
  {
    return suffix;
  }


  public void setSuffix(String suffix)
  {
    this.suffix = suffix;
  }


  public SingleInputLineColumnDto defaultValue(String defaultValue)
  {

    this.defaultValue = defaultValue;
    return this;
  }

  /**
   * @return defaultValue
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDefaultValue()
  {
    return defaultValue;
  }


  public void setDefaultValue(String defaultValue)
  {
    this.defaultValue = defaultValue;
  }


  public SingleInputLineColumnDto formerTechnicalValue(String formerTechnicalValue)
  {

    this.formerTechnicalValue = formerTechnicalValue;
    return this;
  }

  /**
   * @return formerTechnicalValue
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFormerTechnicalValue()
  {
    return formerTechnicalValue;
  }


  public void setFormerTechnicalValue(String formerTechnicalValue)
  {
    this.formerTechnicalValue = formerTechnicalValue;
  }


  public SingleInputLineColumnDto dynamicTableIndex(String dynamicTableIndex)
  {

    this.dynamicTableIndex = dynamicTableIndex;
    return this;
  }

  /**
   * @return dynamicTableIndex
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDynamicTableIndex()
  {
    return dynamicTableIndex;
  }


  public void setDynamicTableIndex(String dynamicTableIndex)
  {
    this.dynamicTableIndex = dynamicTableIndex;
  }


  public SingleInputLineColumnDto prefilling(PrefillingDto prefilling)
  {

    this.prefilling = prefilling;
    return this;
  }

  /**
   * Get prefilling
   *
   * @return prefilling
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PrefillingDto getPrefilling()
  {
    return prefilling;
  }


  public void setPrefilling(PrefillingDto prefilling)
  {
    this.prefilling = prefilling;
  }


  @Override
  public boolean equals(Object o)
  {
    if (this == o)
    {
      return true;
    }
    if (o == null || getClass() != o.getClass())
    {
      return false;
    }
    SingleInputLineColumnDto singleInputLineColumnDto = (SingleInputLineColumnDto) o;
    return Objects.equals(this.id, singleInputLineColumnDto.id) &&
            Objects.equals(this.metaTypeId, singleInputLineColumnDto.metaTypeId) &&
            Objects.equals(this.metaTypeName, singleInputLineColumnDto.metaTypeName) &&
            Objects.equals(this.uniqueName, singleInputLineColumnDto.uniqueName) &&
            Objects.equals(this.displayName, singleInputLineColumnDto.displayName) &&
            Objects.equals(this.rawLabel, singleInputLineColumnDto.rawLabel) &&
            Objects.equals(this.mode, singleInputLineColumnDto.mode) &&
            Objects.equals(this.technicalName, singleInputLineColumnDto.technicalName) &&
            Objects.equals(this.sharedLocale, singleInputLineColumnDto.sharedLocale) &&
            Objects.equals(this.helpText, singleInputLineColumnDto.helpText) &&
            Objects.equals(this.visibility, singleInputLineColumnDto.visibility) &&
            Objects.equals(this.dependsFromVariableId, singleInputLineColumnDto.dependsFromVariableId) &&
            Objects.equals(this.dependsFromVariableValues, singleInputLineColumnDto.dependsFromVariableValues) &&
            Objects.equals(this.typeSpanning, singleInputLineColumnDto.typeSpanning) &&
            Objects.equals(this.system, singleInputLineColumnDto.system) &&
            Objects.equals(this.storageType, singleInputLineColumnDto.storageType) &&
            Objects.equals(this.width, singleInputLineColumnDto.width) &&
            Objects.equals(this.position, singleInputLineColumnDto.position) &&
            Objects.equals(this.maxCharacters, singleInputLineColumnDto.maxCharacters) &&
            Objects.equals(this.regexp, singleInputLineColumnDto.regexp) &&
            Objects.equals(this.inputSize, singleInputLineColumnDto.inputSize) &&
            Objects.equals(this.suffix, singleInputLineColumnDto.suffix) &&
            Objects.equals(this.defaultValue, singleInputLineColumnDto.defaultValue) &&
            Objects.equals(this.formerTechnicalValue, singleInputLineColumnDto.formerTechnicalValue) &&
            Objects.equals(this.dynamicTableIndex, singleInputLineColumnDto.dynamicTableIndex) &&
            Objects.equals(this.prefilling, singleInputLineColumnDto.prefilling);
  }

  @Override
  public int hashCode()
  {
    return Objects.hash(id, metaTypeId, metaTypeName, uniqueName, displayName, rawLabel, mode, technicalName, sharedLocale, helpText, visibility, dependsFromVariableId, dependsFromVariableValues, typeSpanning, system, storageType, width, position, maxCharacters, regexp, inputSize, suffix, defaultValue, formerTechnicalValue, dynamicTableIndex, prefilling);
  }

  @Override
  public String toString()
  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SingleInputLineColumnDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metaTypeId: ").append(toIndentedString(metaTypeId)).append("\n");
    sb.append("    metaTypeName: ").append(toIndentedString(metaTypeName)).append("\n");
    sb.append("    uniqueName: ").append(toIndentedString(uniqueName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    rawLabel: ").append(toIndentedString(rawLabel)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    technicalName: ").append(toIndentedString(technicalName)).append("\n");
    sb.append("    sharedLocale: ").append(toIndentedString(sharedLocale)).append("\n");
    sb.append("    helpText: ").append(toIndentedString(helpText)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    dependsFromVariableId: ").append(toIndentedString(dependsFromVariableId)).append("\n");
    sb.append("    dependsFromVariableValues: ").append(toIndentedString(dependsFromVariableValues)).append("\n");
    sb.append("    typeSpanning: ").append(toIndentedString(typeSpanning)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    maxCharacters: ").append(toIndentedString(maxCharacters)).append("\n");
    sb.append("    regexp: ").append(toIndentedString(regexp)).append("\n");
    sb.append("    inputSize: ").append(toIndentedString(inputSize)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    formerTechnicalValue: ").append(toIndentedString(formerTechnicalValue)).append("\n");
    sb.append("    dynamicTableIndex: ").append(toIndentedString(dynamicTableIndex)).append("\n");
    sb.append("    prefilling: ").append(toIndentedString(prefilling)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o)
  {
    if (o == null)
    {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

