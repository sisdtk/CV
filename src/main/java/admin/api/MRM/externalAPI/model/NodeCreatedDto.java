/*
 * All MRM packages REST API
 * <h2>All MRM packages REST API</h1>
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package admin.api.MRM.externalAPI.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 *
 */
@ApiModel(description = "")

public class NodeCreatedDto
{
    public static final String SERIALIZED_NAME_PLANNED = "planned";
    @SerializedName(SERIALIZED_NAME_PLANNED)
    private List<DseBudgetDto> planned = null;

    public static final String SERIALIZED_NAME_NODE = "node";
    @SerializedName(SERIALIZED_NAME_NODE)
    private DseNodeDto node;

    public static final String SERIALIZED_NAME_PERIODS = "periods";
    @SerializedName(SERIALIZED_NAME_PERIODS)
    private List<DsePeriodDto> periods = null;


    public NodeCreatedDto planned(List<DseBudgetDto> planned)
    {

        this.planned = planned;
        return this;
    }

    public NodeCreatedDto addPlannedItem(DseBudgetDto plannedItem)
    {
        if (this.planned == null)
        {
            this.planned = new ArrayList<DseBudgetDto>();
        }
        this.planned.add(plannedItem);
        return this;
    }

    /**
     * @return planned
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<DseBudgetDto> getPlanned()
    {
        return planned;
    }


    public void setPlanned(List<DseBudgetDto> planned)
    {
        this.planned = planned;
    }


    public NodeCreatedDto node(DseNodeDto node)
    {

        this.node = node;
        return this;
    }

    /**
     * Get node
     *
     * @return node
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public DseNodeDto getNode()
    {
        return node;
    }


    public void setNode(DseNodeDto node)
    {
        this.node = node;
    }


    public NodeCreatedDto periods(List<DsePeriodDto> periods)
    {

        this.periods = periods;
        return this;
    }

    public NodeCreatedDto addPeriodsItem(DsePeriodDto periodsItem)
    {
        if (this.periods == null)
        {
            this.periods = new ArrayList<DsePeriodDto>();
        }
        this.periods.add(periodsItem);
        return this;
    }

    /**
     * @return periods
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<DsePeriodDto> getPeriods()
    {
        return periods;
    }


    public void setPeriods(List<DsePeriodDto> periods)
    {
        this.periods = periods;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NodeCreatedDto nodeCreatedDto = (NodeCreatedDto) o;
        return Objects.equals(this.planned, nodeCreatedDto.planned) &&
                Objects.equals(this.node, nodeCreatedDto.node) &&
                Objects.equals(this.periods, nodeCreatedDto.periods);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(planned, node, periods);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NodeCreatedDto {\n");
        sb.append("    planned: ").append(toIndentedString(planned)).append("\n");
        sb.append("    node: ").append(toIndentedString(node)).append("\n");
        sb.append("    periods: ").append(toIndentedString(periods)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

